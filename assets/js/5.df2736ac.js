(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{170:function(e,a,t){"use strict";t.r(a);var s=t(0),r=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"模块化分"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#模块化分","aria-hidden":"true"}},[e._v("#")]),e._v(" 模块化分")]),e._v(" "),t("p",[e._v("成昆系统对模块的化分非常清楚，每个模块负责着不同的角色和功能,整个工程是基于vue-cli搭建而成，主要关注src目录")]),e._v(" "),t("h2",{attrs:{id:"assets-目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#assets-目录","aria-hidden":"true"}},[e._v("#")]),e._v(" assets 目录")]),e._v(" "),t("p",[e._v("存放静态图片和一些静态css")]),e._v(" "),t("p",[e._v("assets目录结构")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" ---css\n ---image\n ---font\n")])])]),t("h2",{attrs:{id:"components-目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#components-目录","aria-hidden":"true"}},[e._v("#")]),e._v(" components 目录")]),e._v(" "),t("p",[e._v("针对于后台管理系统，主要存在的有页面的布局组件,关于布局组件是基本定死，不需要关注。同样里面有基于普遍后台开发模式基于element-ui封装便捷开发者使用的组件系统，同样自己也要以存放自己便捷的开发的组件。")]),e._v(" "),t("p",[e._v("components目录结构")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("----layout\n  |----PaperAside.vue  左侧菜单组件\n  |----PaperHeader.vue  头部组件\n  |----PaperBread.vue  内容区域内部导航组件\n  |----PaperDialogs.vue  弹窗组件\n----baseElement\n  |----PaperDialog.vue 基于element封装的弹窗页面组件\n  |----PaperTable.vue 基于element封装的表格列表自动化组件\n  |----更多敬请期待\n")])])]),t("p",[e._v("对于layout文件中是大家不需要关心的内容,是对页面自动运行布局等工程中的封装组件。而baseElement是对简化自动化模式的操作而封装的一系列组件,关于组件详细的内容[请点击这里]")]),e._v(" "),t("h2",{attrs:{id:"config目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#config目录","aria-hidden":"true"}},[e._v("#")]),e._v(" config目录")]),e._v(" "),t("p",[e._v("config主要是进行配置化的操作。工程内部自动化运行需要进行特定的配置。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("----api.js  // 基于resultful配置接口\n----cache.js // 设置页面缓存和全局弹窗页面缓存的机制\n----menu.js // 左侧菜单的配置\n")])])]),t("ol",[t("li",[e._v("api主要配置了所有了接口的请求，主要是针对于resultful接口的配置")]),e._v(" "),t("li",[e._v("cache通过name属性针对特定页面进行缓存处理")]),e._v(" "),t("li",[e._v("通过menu对左侧菜单自动化运行配置")])]),e._v(" "),t("p",[e._v("想知道配置的具体使用[请点击这里]")]),e._v(" "),t("h2",{attrs:{id:"filter目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#filter目录","aria-hidden":"true"}},[e._v("#")]),e._v(" filter目录")]),e._v(" "),t("p",[e._v("filter主要是对值进行过滤，充当过滤器的使用,学过vue的都知道，通过一些过滤函数。解决常用的比如对时间过滤等存放的目录")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("----formatTime.js 对时间格式进行处理\n")])])]),t("p",[e._v("关于过滤器的更多内容[请点击这里]")])])}],!1,null,null,null);r.options.__file="mokuai.md";a.default=r.exports}}]);